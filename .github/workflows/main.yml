name: WaveWatchr data + alerts

on:
  # Every 30 minutes for regular data
  schedule:
    - cron: "*/30 * * * *"          # fetch job (UTC)
    - cron: "0 8,16,20 * * *"       # alerts at 04:00, 12:00, 16:00 ET â‰ˆ 08:00,16:00,20:00 UTC
  workflow_dispatch:

permissions:
  contents: read

env:
  GSHEET_ID: ${{ secrets.GSHEET_ID }}
  STATION_IDS: ${{ secrets.STATION_IDS }} # e.g. "41117"
  GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}

jobs:
  fetch:
    if: github.event_name != 'schedule' || contains('*/30 * * * *', '*/30') # run on 30-min schedule & manual
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Write GCP key to file
        run: |
          echo "$GOOGLE_APPLICATION_CREDENTIALS_JSON" > sa.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=$PWD/sa.json" >> $GITHUB_ENV

      - name: Fetch latest buoy data and write to Google Sheet
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}
          GSHEET_ID: ${{ env.GSHEET_ID }}
          STATION_IDS: ${{ env.STATION_IDS }}
        run: |
          python fetch_and_write.py

  alerts:
    # Only run on the three UTC times (08,16,20) or when manually dispatched
    if: github.event_name == 'workflow_dispatch' || (github.event.schedule && (contains(github.event.schedule, '0 8,16,20 * * *')))
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Write GCP key to file
        run: |
          echo "$GOOGLE_APPLICATION_CREDENTIALS_JSON" > sa.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=$PWD/sa.json" >> $GITHUB_ENV

      - name: Run alert filters (Shortboard, Longboard, Short-Period)
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}
          GSHEET_ID: ${{ env.GSHEET_ID }}
          STATION_IDS: ${{ env.STATION_IDS }}
        run: |
          python alerts_run_all.py
